http {
    # Enable or disable emitting nginx version on response's header.
    server_tokens off;

    # Max size & bucket size for the server names hash table.
    server_names_hash_max_size 1024;
    server_names_hash_bucket_size 32;

    # Max size & bucket size for the mime types hash table.
    types_hash_max_size 2048;
    types_hash_bucket_size 32;

    # Speed up static file transfers by using the sendfile() rather than the
    # read() and write() combination. sendfile() has the ability to transfer
    # data from the file descriptor.
    sendfile on;

    # Optimize the amount of data that is being sent at once. Prevent Nginx
    # from sending a partial frame. As a result it will increases the
    # throughput, since TCP frames will be filled up before being sent out.
    # You also need to activate the `sendfile` option.
    tcp_nopush on;

    # By default, the TCP stack implements a mechanism to delay sending the
    # data up to 200ms. To force a socket to send the data in its buffer
    # immediately we can turn this option on.
    tcp_nodelay on;

    # A timeout of which a keep-alive connection will stay open. Longer
    # duration are better for client, especially on SSL, the downside is the
    # worker connection is occupied longer.
    keepalive_timeout 20s;

    # Mime types.
    include mime.types;
    default_type application/octet-stream;

    # Update the charset to match the updated mime.types.
    # By efault the `text/html` is always included by the charset module.
    charset_types
        text/css
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/json
        application/rss+xml
        application/xml;

    # Enable gzip compression.
    gzip on;


    proxy_connect_timeout       3600;
    proxy_send_timeout          3600;
    proxy_read_timeout          3600;
    send_timeout                3600;
    client_max_body_size        1000m;


    # Gzip compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    gzip_comp_level 5;

    # Don't compress a small file that is unlikely to shrink much. The small
    # file is also usually ended up in larger file sizes after gzipping.
    gzip_min_length 256;

    # Compress data even for a proxied connection.
    gzip_proxied any;

    # Cache both the regular and the gzipped versions of a resource whenever
    # client's Accept-Encoding capabilities header varies.
    gzip_vary on;

    # Compress all of the following mime-types, `text/html` is always
    # compressed.
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    server {
        listen 80;
        server_name _;

        location / {

            # The document root path.
            root /etc/nginx/html;

            # Files that will be used as index.
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Protect other sensitive files.
        location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
            deny all;
        }
    }
}